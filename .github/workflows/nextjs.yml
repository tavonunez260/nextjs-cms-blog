# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_GRAPHCMS_EP: https://api-eu-central-1-shared-euc1-02.hygraph.com/v2/cljtg4ni90y3i01uf92ypg7jy/master
      GRAPHCMS_TOKEN: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImdjbXMtbWFpbi1wcm9kdWN0aW9uIn0.eyJ2ZXJzaW9uIjozLCJpYXQiOjE2OTQwNTg3NDQsImF1ZCI6WyJodHRwczovL2FwaS1ldS1jZW50cmFsLTEtc2hhcmVkLWV1YzEtMDIuaHlncmFwaC5jb20vdjIvY2xqdGc0bmk5MHkzaTAxdWY5MnlwZzdqeS9tYXN0ZXIiLCJtYW5hZ2VtZW50LW5leHQuZ3JhcGhjbXMuY29tIl0sImlzcyI6Imh0dHBzOi8vbWFuYWdlbWVudC5ncmFwaGNtcy5jb20vIiwic3ViIjoiOWRkNTM0ZDEtMzkxYy00ZjdlLWE4ZmItMzM1NGM3YWQ1MTc1IiwianRpIjoiY2xtOG11NHFqMG5lbjAxdWhhdTRrODhqbSJ9.Rzy97w3iBkU4Y-Z2LnGHQSdR46jgN_dQJDtzk0XQXU7DwT7w0lH-mUBBux9mUqwgavIiFVL7nfyruvEsB8lgSaSMs74iKVmkVMx-xXk7dxrczwTS0V3ONG1abhQ6SiOzE6qgMCtKIoRsUqP8lQG-4Ioq_vyhLCXjf186eJq5jL_Bxl32X9XL8sPQsr8VchHKZy_eoOaXhogtOMBimym8cNgH0EfWsZEWCYU_pnYHB0bYgoa51i4YqHT1sOrviBK7P57E0B6WkXot2-P-yF1gOb1z7TffKc2jiyoq9VLhKBf95WB5derjhjWO944pvWRegNPn3AOIMwUgSn_7D9moV1beNLAaM3X46faoaSzrwusflj5kV7qwPSdYxKt8uo8rkAFSVgNP5CIhnGwswglKssyKRGbBAMGj-ycWjS_By1ubI5ULuHVRkNabGL8AG7mXHMC2SAWbc5b0-6ZfZiqUgxQ4dBaFF1FBBERY3Zwo_vtSwGSQ31G5X053QXpRN2jurJg1IMm2DAeM06XzSx84dv-BgQT2AMtoQ1Gja36IlK-hSw5hBmtlmMR_R6XQdt_tiK02iNzHrESVeH86of3u5UYZJkV7qcbTgnaqWZwpb5WZw9yevPJmWDGyvE839Mw81n4sepP_e84naJILz2f_m2H4egiSrjeLgP5eLQWyWN8
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
